name: Build and deploy .NET Core application

on:
  push:
    branches:
      - frontend
      - main
env:
  AZURE_WEBAPP_NAME: levanhiep409159
  AZURE_WEBAPP_PACKAGE_PATH: App.Frontend\published
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: ./src/App.Frontend
  GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

jobs:
  generate-version:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Github Tag Bump
        id: tab_bump
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: patch

    outputs:
      new_version: ${{ steps.tab_bump.outputs.new_tag }}
  build:
    runs-on: ${{ matrix.os }}
    needs: generate-version

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch full history including tags

        # we build, test, and deploy steps here
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore Dependencies
        run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
      - name: Build
        run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build

      - name: Publish
        run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: webapp-dotnet-version-${{ env.DOTNET_CORE_VERSION }}
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ${{ matrix.os }}
    needs: build

    environment: Production

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: webapp-dotnet-version-${{ env.DOTNET_CORE_VERSION }}
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.LEVANHIEP409159_8286 }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
